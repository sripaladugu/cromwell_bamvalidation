// singularity_slurm.conf

include required(classpath("application"))

// this stanza controls how fast Cromwell submits jobs to AWS Batch
// and avoids running into API request limits
system {
    job-rate-control {
        jobs = 1
        per = 2 second
    }
}

backend {
     default = "Slurm"
     providers {
         Slurm {
             actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
	     config {
	        script-epilogue = "sleep 30"
	        concurrent-job-limit = 10
	        runtime-attributes = """
             	Int rt_time = 600
             	Int rt_cpus = 2
             	Int rt_mem = 5000
             	String rt_queue = "C-16Cpu-30GB"
                String? docker
             	"""
             	submit = """
             	sbatch \
                --export=ALL \
             	-J ${job_name} \
             	-D ${cwd} \
             	-o ${out} \
             	-e ${err} \
             	-t ${rt_time} \
             	-p ${rt_queue} \
             	${"-c " + rt_cpus} --mem=${rt_mem} \
             	--wrap "/bin/bash ${script}"
             	"""

                submit-docker = """
                module load singularity

                # Build the Docker image into a singularity image
                IMAGE=${cwd}/execution/${docker}.sif
                mkdir $(dirname $IMAGE)
                singularity build $IMAGE docker://${docker}

                # Submit the script to SLURM
                sbatch \
                  --wait \
                  --export=ALL \
                  -J ${job_name} \
                  -D ${cwd} \
                  -o ${cwd}/execution/stdout \
                  -e ${cwd}/execution/stderr \
                  -t ${rt_time} \
             	  -p ${rt_queue} \
                  ${"-c " + rt_cpus} \
                  --mem-per-cpu=${rt_mem} \
                  --wrap "singularity exec --bind ${cwd}:${docker_cwd} $IMAGE ${job_shell} ${script}"
	        """
		
                filesystems = {
                    local {
                        localization: [ "soft-link", "hard-link", "copy" ]
                    }
                }
		
             	job-id-regex = "Submitted batch job (\\d+).*"
             	kill = "scancel ${job_id}"
             	check-alive = "squeue -j ${job_id}"
	     }
         }
     }
}
